
var documents = [{
    "id": 0,
    "url": "http://localhost:4000/404.html",
    "title": "404",
    "body": "404 Page does not exist!Please use the search bar at the top or visit our homepage! "
    }, {
    "id": 1,
    "url": "http://localhost:4000/about",
    "title": "나의 발자취~",
    "body": "티맥스 AI:  프로젝트 : HyperStudy   기  간 : 2019. 8. 1 ~ 현재  사용기술 : python  업무사항       수학컨테츠 개발 및 수학학습방향제시    타사 Q&amp;A 게시판 crawling 후 NLP를 이용하여 질문과 답변에 대한 유형정리    HyperStudy Cloud 기획    학생들 수학풀이에 대한 유형분석 연구    LaTex변환에 대한 연구      개념원리:  프로젝트 : mathpedia   기  간 : 2018. 8. 1 ~ 2019. 06. 20  사용기술 : python, javascript, aws, deep learning, vue js, node js, MariaDB, mongoDB, OAuth2. 0, reactnative  개발사항       python을 이용한 한글파일 parsing과 latex parsing 오픈소스 라이브러리 수정    deep learning을 이용한 이미지 분류    reactnative에서 restAPI을 이용한 이미지 분류 데이터 반환    OAuth2 0을 이용한 인증서버 개발       프로젝트 : gn-tft   기  간 : 2018. 12. 18 ~ 2019. 05. 26  내  용 : 교육관련 플랫폼의 방향과 현 강사들의 니즈분석  담당업무 : 강사출신으로서의 경험과 앞으로 필요한 교육서비스의 조언 및 플래폼서비스의 방향제시 개발자를 위한 스터디 진행:    기  간 : 2018. 04. ~ 2018. 11.   내  용 : 개발자를 위한 고등과정에서 대학과정 선형대수학 까지의 수학내용에 대한 스터디 나눔아이씨티:  프로젝트 : 안산시청 홈페이지 통합   기  간 : 2018. 01. 02 ~ 2018. 07. 13  사용기술 : JAVA, 정부전자프레임워크 JEUS, WEBTOBE, MS-SQL, oracle, 넥사크로프레임워크  개발사항 : 안산시청 홈페이지 통합 및 리뉴얼  프로젝트 : 화성도시공사 경영정보 시스템   기  간 : 2017. 03. 01 ~ 2017. 12. 29  사용기술 : JAVA, 정부전자프레임워크, JEUS, WEBTOBE, MS-SQL  개발사항       MS-SQL -&gt; oracle 로 회원정보 데이터 이전    화성도시공사 대관관리시스템을 넥사크로프레임워크으로 프론트앤드 개발      엔비솔:  프로젝트 : SKT-Pdm   기  간 : 2016. 11. ~ 2017. 02.   사용기술 : python, JAVA, Cassandra, Elastic Search  개발사항       SKT의 Cassandra 데이터를 Elastic Search로 포워딩하는 작업    데이터 제어를 위한 컴엔드환경 구축      사관학교입시컨설팅:    기  간 : 2016. 01. 05 ~ 2017. 02. 17  내  용 : 수학 8, 9등급대 학생들을 사관학교 입학을 위한 학습컨설팅 및 수학개인과외 총 4명의 학생중 전원 70점이상의 점수를 달성 2명합격 알고리즘연구소:  프로젝트 : 학생통합관리프로그램   기  간 : 2012. 04. ~ 2012. 10.   사용기술 : C#, . NET, mysql  개발사항       학원 회계관련 및 학생 성적 진학 프로그램 개발    성적 통계 연구    대학입학 자료를 통한 진학 통계 연구       프로젝트 : 이과교재편집   기  간 : 2013. 11. ~ 2014. 05.   내  용 : 이과 교재 편집 및 교육 커리큘럼 제작 이과강사 교육  프로젝트 : 문이과공통교재편집   기  간 : 매년 08월 ~ 12월  내  용 : 수능 패턴을 분석하여 예상문제 추가와 수교평의 문제 추가 서브프라임:  프로젝트 : 고객예약서비스:    사용기술 : C#, . NET, mysql  개발사항 : 회원가입 및 로그인 페이지 구현 데이터 관련 컴포넌트 개발 "
    }, {
    "id": 2,
    "url": "http://localhost:4000/categories",
    "title": "Categories",
    "body": ""
    }, {
    "id": 3,
    "url": "http://localhost:4000/",
    "title": "Home",
    "body": "      Featured:                                                                                                                                                                                                           수학을 느낄 수 있는 방법                              :               많은 사람들은 수학을 굉장히 딱딱한 학문이고 생각합니다. :                                                                                                                                                                       Jin                                19 Aug 2020                                                                                                                                                                                                                                                                                                                  함수란                              :               프로그래머들에게 있어서 함수라는 개념은 아주 중요하다고 할 수 있습니다. :                                                                                                                                                                       Jin                                19 Aug 2020                                                                                                                                                                                                                                                                                                                  수학적인 사고의 방법                              :               수학적인 사고라 함은 자신이 생각하는 부분을 수학적인 표현으로 바꾸는 것이라고 볼 수 있을 것입니다. :                                                                                                                                                                       Jin                                18 Aug 2020                                                                                                                                                                                                                                                                                                                  수란 무엇인가?                              :               수학에 있어서 수란 아주 중요한 표현입니다. :                                                                                                                                                                       Jin                                18 Aug 2020                                                                                                                                                                                                                                                                                                                  수학 = 공식 ??????                              :               수학을 흔히 계산의 도구로만 생각하는 경향들이 있습니다. :                                                                                                                                                                       Jin                                18 Aug 2020                                                                                                                                                                                                                                                                                                                  수학 = 공식 ??????                              :               수학이라는 말을 들었을 때 가장 먼저 생각이 나는 것은 공식을 외운다는 생각이 제일 먼저 날것입니다. :                                                                                                                                                                       Jin                                14 Aug 2020                                                                                                                                                                                                                                                                                                                  우리는 수학을 왜 배워야 하는가?                              :               수학은 논리성의 학문입니다. 앞뒤의 인과관계를 판단하여 그 다음을 예측하거나 이전을 예측할 수 있는 학문이 수학입니다. 수학적인 능력 다시 말해서 수리적인 능력은 생각하고 판단하는데 아주 중요한. . . :                                                                                                                                                                       Jin                                13 Aug 2020                                                                                                                      All Stories:             "
    }, {
    "id": 4,
    "url": "http://localhost:4000/robots.txt",
    "title": "",
    "body": "      Sitemap: {{ “sitemap. xml”   absolute_url }}   "
    }, {
    "id": 5,
    "url": "http://localhost:4000/math-blog-7/",
    "title": "수학을 느낄 수 있는 방법",
    "body": "2020/08/19 - 많은 사람들은 수학을 굉장히 딱딱한 학문이고 생각합니다. 아마도 그 이유는 여러가지가 있을 수 있습니다. 수학공식, 논리, 컴퓨터, 이과, 과학 등등 저는 수학을 한다는 것이 꼭 수학공식을 외우고 계산을 하는 것이 수학을 한다고 국한 짓고 싶지는 않습니다. 많은 사람들이 실생활에서 수학을 접하며 살고 있지만 수학인지 모르고 있습니다. 마치 공기처럼 실제 존재하지만 의식하지 않다고 할까요? 예를 들면 식당에서 음식을 먹거나 물건을 사고 그 값을 지불하기 위해서 값을 계산합니다. 이 또한 수학의 일부분입니다. 하지만 우리는 그 행위를 수학을 하고 있다고 생각하지는 않습니다. 이 뿐아니라 무수히 많은 상황들에서 우리는 수학을 접할 수 밖에 없습니다. 하지만 아무도 그 부분을 인지 하고 있지는 않습니다. 우리는 누구나 전기를 사용합니다. 스위치를 이용해서 불을 켜거나 끄고 콘센트에 여러가지 기기들을 연결하여 사용합니다. 이 또한 연결을 하면 사용을 할 수 있다고 생각을 하지 내가 사용하는 기기에 전류가 흐르고 있다고 생각하지는 않습니다. 그런데 만약에 물 묻을 손을 콘센트를 연결하다가 가벼운 감전을 경험을 한다면 우리는 전류가 흐르고 있다고 그때서야 인식을 합니다. | 특정한 이슈가 생긴다면…: 우리는 어떠한 특정한 이슈가 생기면 평소에는 인지하지 못하던것을 인지하게 됩니다. 앞에서 이야기한 감전을 당한다던지 요즘처럼 미세먼지가 이슈화가 되면서 공기의 질을 확인하고 마스크를 쓸지 말지 결정을 하듯이 평소에는 인지하지 못하다가 어느 순간 인지하지 못하던 것들을 인지하게 되는 순간이 생길 수 있다고 생각합니다. 수학 또한 필요한 어떤 순간이 생긴다면 수학을 이용하여 문제를 해결하면 될 것입니다. 하지만 수학이라는 학문은 많은 사람들이 어려워하는 부분이라고 생각합니다. 그 이유를 생각해보면 아마도 우리가 수학을 접근하는 태도에 문제가 있을거 같다는 생각을 해봅니다. 우리가 일상적인 생활을 하는데 사용을 하는 수학은 중학교 과정정도의 수학지식이면 될거라고 생각합니다. 그 안에는 대부분의 기본적인 수학 지식이 다 있습니다. 중학교정도의 지식 수준만 있다고 하면 많은 수학의 원리를 파악하고 접근할 수 있다고 생각합니다. 저의 짧은 생각으로는 중등과정과 고등과정의 차이는 용어와 범위와 조건의 차이에 따라 사용하는 수학적인 용어에 차이 있을 뿐이지 기본적인 원리는 중등과정에 대부분이 들어가 있다고 생각합니다.  그렇다고 수학적인 사고력을 키우기 위해서 중등과정의 내용을 처음부터 공부해야 한다는 이야기는 아닙니다. 필요한 부분을 찾아서 이해해 나간다면 수학적 사고가 필요한 순간에 논리적으로 생각할 수 있는 능력을 발휘할 수 있다고 생각합니다. 여기서 중요한 것은 수학공식이나 수학적 내용을 외울필요하는 전혀 없습니다. 수학적인 설명방법이나 표현하는 방법을 이해할 수 있는 수준이면 된다고 저는 생각합니다. 다시 말해서 필요한 순간에 수학적 내용을 찾아서 설명되어 있는 내용이 어떤 의미를 말하는지 알 수 있으면 된다고 생각합니다. 저는 그것이 수학을 인지할 수 있는 방법이라고 생각합니다. | A=B이고 B=C이면 A=C이다. : 논리적인 방법중에 삼단논법이라는 것이 있습니다. 바로 $A=B$이고 $B=C$이면 $A=C$이다. 이는 수학에서 연역법이라고 설명을 합니다. 증명을 하는 방법중의 하나로 수식을 증명하는 방법으로 사용합니다. 하지만 수학의 증명방법으로 사용하는 것뿐아니라 사실상 우리는 평소에 이야기하거나 글을 읽고 무언가를 판단할때 무의적으로 삼단논법을 많이 사용합니다. 이 연역법은 아주 중요한 설명방법이고 논리적인 표현이라고 생각합니다. 수학에서 사용하는 증명방법은 연역법, 귀류법, 귀납법을 배웁니다. 귀류법과 귀납법을 잠시 이야기하면 귀류법은 결론을 부정하여 부정한 결론이 오류가 있을 보여서 부정하기전의 원 문장이 맞을 증명하는 방법이고 대표적으로 무리수를 증명할 때 사용하는 증명법입니다. 귀납법은 나열적 사고의 증명방법입니다. 첫번째 시행의 참임을 확인하고 임의번째 시행이 참임을 보이고 임의번째 다음 시행이 참임을 확인하여 모든 시행이 참을 증명하는 방법이고 대표적으로 수열이나 시행을 해야하는 수학에서 증명할 때 사용하는 증명법입니다 여기서 이야기하고 싶은 핵심은 증명방법을 판단할 때는 전체적인 구조에서 귀류법인지 귀납법인지를 판단합니다. 그러나 구조안에서 설명을 하거나 내용이 참 거짓을 판단할 때는 연역법을 이용해서 설명거나 판단합니다. 이렇듯 연역법은 우리가 인지하지 못하는 범위에서 사용하는 논리적인 사고방법입니다. 우리는 모두 논리적인 생각을 이용하며 사고하고 판단하기 위해서 자신도 인지하지 못하는 범위에서 연역법을 사용하고 살아갑니다. 그래서 수학적 언어를 알아간다면 누구나 수학을 증명할 수 있고 다은 수학자들의 증명법에 대해서 이해를 할 수 있는 능력을 갖을 수 있을 것입니다. "
    }, {
    "id": 6,
    "url": "http://localhost:4000/math-blog-6/",
    "title": "함수란",
    "body": "2020/08/19 - 프로그래머들에게 있어서 함수라는 개념은 아주 중요하다고 할 수 있습니다. 모든 프로그램언어들이 함수의 구조로 이루어져 있고 이를 연결하고 논리적으로 구조화하는 것이 프로그램이라고 생각합니다. 그래서 공식보다 중요한 것이 함수의 기본적인 개념이고 함수가 어디에 사용이 되며 어떻게 활용할 수 있는지에 대해서 중점적으로 이야기 해볼 생각입니다. | 함수는 추론 할 수 있어야 한다:  수학에서, 함수(函數, 영어: function) 또는 사상(寫像, 영어: map)은 첫 번째 집합의 임의의 한 원소를 두 번째 집합의 오직 한 원소에 대응시키는 대응 관계이다. 위의 정의는 위키피디아에 나와 있는 함수의 정의입니다. 뭔지 모르게 어렵게 함수를 정의 했다고 생각합니다. 조금 쉽게 풀어서 이야기하면 하나의 값은 오직 하나의 값을 갖는다는 이야기입니다.  그래서 함수란 어떤 값을 연산했을 때 특별한 조건없이 어떤 값이 나올지 알 수 있습니다. 예를 들면, 빵 만드는 기계에 밀가루를 넣으면 빵이 나온다는 것을 우리는 예측할 수 있습니다. 만약에 어떤한 기계에 밀가루를 넣었을 때 나오는 결과가 빵이 나올지 국수가 나올지 모른다면 이는 함수라고 할 수 없습니다.  프로그램도 같습니다. 어떠한 함수의 결과가 int 일지 string일지 알 수 없다면 그 함수는 사용을 할 수 없을 것입니다. 이렇게 함수는 어떠한 입력값에 의해서 나오는 결과값을 예측할 수 있어야 하고 예측을 할 수 있을 때 우리는 함수라고 합니다. | 그럼 예측 할 수 없는 함수는?: $y=x$는 함수입니다. 하나의 $x$값에 대해서 하나의 $y$값을 갖는 반면 왼쪽의 원은 하나의 $x$값에 대해서 두개의 $y$값을 갖습니다. 그래서 원을 우리는 함수라고 하지 않고 원의 방정식이라고 합니다. 이렇게 하나의 값에 대해서 두개 이상의 값을 갖는 형태를 도형의 방정식이라고 합니다. 이처럼 좌표에 시각적으로 표현할 수 있는 수학적인 영역이 함수와 도형입니다. | 치환의 중요성: 수학에 있어서 치환이라는 개념은 수학적인 표현의 간결성을 만들어주는 아주 중요한 부분입니다. 프로그램도 객체라는 개념이 치환이라는 개념과 거의 동일한 의미를 가지고 있습니다. 객체지향프로그램(OOP)을 간단하게 이야기 하자면 프로그램을 작성할 때 반복되는 부분을 하나의 객체화하여 재사용성을 높이는 방법이라고 할 수 있겠습니다. 수학에서 치환이란 객체지향과 비슷한 방법입니다. 반복되어 사용하는 수학적인 형태를 하나의 문자로 변환하여 수식의 차원이나 형태를 변형하여 간단하게 만들 수 있습니다. $x^4+3x^2-2=0$$t=x^2$로 치환하면$t^2+3t-2=0$ 이렇게 4차원의 방정식을 2차원의 방정식으로 바꿔서 판단을 할 수 있습니다. 연산을 하는데 있어서 반복되는 형태를 묶어주면 손쉬게 연산을 할 수 있습니다. $(a+b+c)(a+b-c)$ 라는 곱셈공식이 있을 때 $a+b=A$라고 치환을 하면 $(A+c)(A-c)$의 합차공식으로 변형할 수 있습니다. 또한 핵심적으로 사용하는 부분은 치환적분법입니다. 적분의 계산을 하는 공식으로 편미분을 이용하여 치환을 이용하는 방법으로 자세한 부분은 나중에 적분법에서 이야기 하겠습니다. 이러한 치환은 수학적인 해석이나 문제해결의 방법론, 구조적인 부분에서는 중요합니다. "
    }, {
    "id": 7,
    "url": "http://localhost:4000/math-blog-5/",
    "title": "수학적인 사고의 방법",
    "body": "2020/08/18 - 수학적인 사고라 함은 자신이 생각하는 부분을 수학적인 표현으로 바꾸는 것이라고 볼 수 있을 것입니다. 많은 사람들은 인지하지 못하는 부분에서 수학적인 사고를 합니다. 그중에서 대표적인 수학적인 사고는 확률일 것입니다. 동전의 앞면이 나올 확률은 50%라는 사실은 상식처럼 알고 있는 부분입니다. 동전이 앞면이 나올 확률을 좀 더 수학적으로 접근하면 동전에서 나올 수 있는 경우는 앞면과 뒷면 두 가지고 그중에 앞면은 한 가지이므로 앞면과 뒷면이 나올 수 있는 확률은 각각 50%입니다. 이러한 논리로 사고를 하는 것이 수학적인 사고의 한 가지 경우라고 할 수 있습니다. 그리고 경우를 나누는 것 또한 수학적인 사고라고 할 수 있습니다. 예를 두 갈래의 길이 있을 경우 왼쪽으로 가는 것이 좋을까? 오른쪽으로 가는 것이 좋을까? 판단하는 것도 수학적인 접근입니다. 이런 식으로 실제로 많은 사람들은 다양하게 수학적인 사고를 하고 그 사고를 통해서 판단을 합니다. 하지만 수학적인 판단을 한다고 생각을 하지 못합니다. 그 이유는 아마도 너무도 쉬운 수학이라서 미처 수학이라고 인지하지 못하는 것이라고 저는 생각합니다. | 거리의 수학적인 접근: 예를 들어 다음 그림처럼 직선이 있고 하나의 점이 있다고 생각을 해봅시다. 여기서 수학적인 사고를 할 수 있는 방법은 여러 가지가 있을 것입니다. 만약에 점과 직선의 거리를 알고 싶다고 가정을 한다면 우선 점과 직선의 거리가 어떤 의미를 갖는지를 알아야 할 것입니다. 점과 직선의 거리는 서로 “수직”의 관계를 갖는다는 것을 알아야 합니다 수직이 거리인 이유는 수직만이 단일값을 값을 갖습니다. 수직이 아닌 다른 거리는 동일한 두개의 위치값을 갖습니다. 그래서 거리는 수직의 관계에서 표현합니다. 서로 수직의 관계를 알았다면 거리를 어떻게 알아낼 수 있을까요? 우선 제일 직관적인 방법은 거리를 직접 자로 재서 알아낼 수 있습니다. 그럼 자로 잴 수 없다면 어떻게 해야 할까요? 이때 좌표라는 개념을 적용할 수 있습니다. 좌표라는 수학적인 개념을 이용하여 점과 직선에 일종의 기준을 마련할 수 있습니다. 그럼 여기서 좌표를 어떻게 잡을 까요? 엄밀히 말해서 기준은 없습니다.  아마 이 글을 보는 대부분의 사람은 좌표가 정해져 있는 문제만 보았을 경우가 많을 것입니다. 기준은 정하는 사람의 마음입니다. 하지만 수식이 간단하게 만들어질 수 있는 좌표를 잡는 것이 가장 효율적인 좌표를 잡는 것이라고 생각합니다.  그럼 실제로 거리를 어떻게 구할지 생각을 해본다면 공식을 알고 있는 사람은 점과 직선 사이의 거리를 이용하여 쉽게 거리를 구할 수 있을 것입니다. 직선 $ax+by+c=0$이고 점$(x_0, y_0)$일 때 거리 $d$를 구하면 하지만 제가 이야기하고 싶은 목적은 수학적인 사고를 어떻게 하는지에 대해서 이야기하는 것이 목적이기 때문에 공식의 이야기는 접어두도록 하겠습니다. 이제 본격적으로 거리를 구하는 부분에 대해서 생각을 해보도록 하겠습니다. 그럼 직선과 점의 거리는 어떻게 구할 수가 있을까요? 거리를 구하기 위해서 사용할 수 있는 방법 중의 하나가 피타고라스의 정리입니다. 피타고라스의 정리는 변의 길이를 알고 하나의 각이 직각인 삼각형을 이용하여 한 변의 길이를 구할 수 있는 방법입니다. 점과 직선 사이의 거리 또한 수직을 이루어야 하기 때문에 피타고라스의 정리를 적용할 수 있다는 생각을 할 수 있습니다. 그럼 여기서 추가로 더 알아야 하는 것은 두변의 길이를 찾아내는 것입니다. 두변의 길이는 어떤 방식으로 알아볼 수가 있을까요? 두변을 구하기 위해서 꼭 공식을 적용해야 할 필요는 없습니다. 당연히 공식을 이용하면 조금은 간편하게 거리를 구할 수 있습니다. 하지만 제가 이야기하고 싶은 것은 공식을 이용하는 것이 아니라 접근을 이야기하고 싶습니다. 수학적인 논리는 다양한 접근을 통해서 수학적인 표현을 할 수 있는 능력이 중요하다고 생각합니다. 그럼 다시 처음 주어줬던 그림에서 $x$축과 $y$축을 다음과 같이 정하고 약간 회전을 하면 마지막 그림처럼 표현할 수 있습니다. 그럼 $y$절편과 점의 거리가 되는 것이고 점의 좌표를 알고 있다면 $x$좌표의 거리가 점과 직선 사이의 거리가 되는 것입니다.  이러한 관점에서 수학을 접근할 수 있다면 고정된 방식으로 문제를 해결하는 것이 아니라 문제의 조건을 벗어나지 않는 범위 안에서 조건을 재해석하고 다른 관점을 적용해본다면 수학적인 사고능력이 향상될 수 있을 것이라고 생각합니다. | 수학적 사고에 의한 문제 해결의 접근 방법: 위의 도형에서 x값을 구하는 문제가 있습니다. 아마도 수학에 대한 기억이 있으신 분이라면 이문제는 피타고라스를 이용하면 구할 수 있겠다고 생각을 하실 수 있을 것입니다. 맞습니다. 중학교 교과서에도 나오는 형태의 문제이고 피타고라스를 이용하면 쉽게 문제를 해결할 수 있습니다. 하지만 제가 이야기하고 싶은 부분은 문제의 질문을 어떤 식으로 해석하고 이해할 것이냐의 문제입니다. x를 과연 어떻게 해석할 수 있을까요? 피타고라스의 정리로 문제를 해결한다는 것은 x를 어떻게 해석한 것일까요? 제가 보는 문제의 관점은 피타고라스의 정리로 문제를 해결한다는 것은 x를 길이의 개념으로 해석했다는 것입니다. 피타고라스의 정리는 직각삼각형에 대한 길이의 관계를 이용한 것이라고 볼 수 있습니다. 그래서 직각삼각형의 부분을 이용하여 피타고라스의 정리를 두 번 이용한다면 문제를 해결 할 수 있을 것입니다. 다시 문제의 질문을 다르게 해석해보겠습니다. x를 삼각형의 변의 길이로 파악할 수 있습니다. 그럼 논리적인 수순으로 삼각형의 닮음비에 대한 논리로 접근할 수 있습니다.  기존의 작은 직각삼각형을 위의 그림과 같이 위치를 바꾸어서 보면 닮음비를 적용하여 간단하게 문제를 해결할 수 있다. 다시 질문을 다르게 바라보겠습니다. 이번에 삼각형의 높이로 해석할 수 있습니다. 그럼 전체 사각형의 넓이의 반과 밑변의 길이가 5이고 높이가 $x$ 인 삼각형의 넓이는 같습니다. 그래서 넓이의 같음을 이용하여 문제를 해결하는 방법을 적용할 수 있습니다. | 수학적인 사고 단계: 위에서 보았듯이 문제를 어떤 식으로 바라보고 해석을 어떻게 하며 어떠한 지식을 적용할 것인지에 따라서 문제를 해결하는 방법이 달라질 수 있습니다. 수학적인 사고 단계란 이처럼 해결하고자 하는 부분을 파악하고 해석을 하는 것이 첫 번째입니다. 이때 문제의 상황과 어떠한 조건들이 있는지를 보면서 자신이 알고 있는 지식을 적용하면 되는 것이고 만약에 필요한 지식을 모르고 있다면 그때 필요한 지식을 정리하여 해결하고 하는 문제의 핵심을 파악할 수 있다고 생각합니다. 그다음 단계는 주어진 조건에 따라서 실제로 실행을 해보는 것입니다. 그림을 그려야 한다면 그림을 그리고 좌표에 표현을 해야 한다면 좌표에 표현을 하고 수식을 정리해야 한다면 수식을 정리를 하면서 자신이 해결하고 하는 문제의 방향에 따라서 실행합니다. 이 때는 수리적인 이해력이 중요합니다.  표현을 한다는 것을 이해를 하고 있어야만 표현이 가능하다고 생각합니다. 마지막 단계는 앞의 단계의 종합적인 논리적인 판단입니다. 자신이 해석인 문제의 방향과 수리적인 표현이 논리적으로 맞아야 합니다. 만약에 결과가 다르다면 이 부분의 논리적인 부분이 잘못되었다는 것을 반증합니다. 간혹 (산수) 계산이 잘못되는 경우 있지만 계산이 잘못되었다는 부분을 배재합니다. "
    }, {
    "id": 8,
    "url": "http://localhost:4000/math-blog-4/",
    "title": "수란 무엇인가?",
    "body": "2020/08/18 - 수학에 있어서 수란 아주 중요한 표현입니다. 저는 수와 문자를 구분하는 능력이 있어야 수학 문제를 효율적으로 해결할 수 있다고 생각합니다. 수는 쉽게 $1$,$2$,$3$,$4$,$5$, $1. 5$, $1/5$, $\log 4$, $\pi$ 이런 것이 들이고 문자는 $x$, $y$, $z$, $a$, $b$ 등등 이런 것들이 문자입니다. 하지만 우리가 생각하는 문자가 항상 문자인 경우는 없습니다. 간혹 문자도 숫자로 취급되는 경우가 있습니다. 가령, $y=ax$라는 식에서 보이는 부분는 전부 문자처럼 보이지만 실제로 $a$는 숫자입니다. 이러한 상황들을 조금 정리하면 보통 문자로 해석하는 경우는 미지수로 정의될 때 그 문자를 문자로 취급하고 미지수가 아닌 문자는 상수(수) 취급할 수 있습니다. 다시 예를 들면 에서 보면 $1$ 말고는 전부 문자처럼 보입니다. 실제로도 문자입니다. 하자만 여기서 생각해봐야 할 문제는 우변의 $n$이 시그마 앞으로 나왔습니다. 수학적인 정리에서 시그마 안의 수식에서 $k$라는 문자 말고는 전부 상수화 하는 것입니다. 그리고 시그마 밖으로 나가는 순간 문자가 됩니다. 우리가 식을 이해하고 해석을 할 때 혹은 문제를 풀 때 문자와 숫자를 구분하지 못할 경우 수학적인 내용을 이해하지 못하거나 문제를 해결하지 못하는 경우가 있습니다. 그래서 수학의 가장 기본적인 부분인 수와 문자에 대해서 구분을 할 수 있는 능력은 아주 중요한 문제가 될 수 있다고 생각합니다. 다시 한번 정리를 해보면 식에서 고정된 값은 수로 취급하고 변하는 값, 구하는 값은 문자로 취급할 수 있을 것입니다. 이 또한, 일반적인 상황을 정리한 것이고 언제든 상황에 따라서 바뀔 수 있다고 생각합니다. 그래서 그 상황에 맞추어 수와 문자를 구별하는 능력을 갖추는 것이 중요하고 이를 키우기 위해서 수학적인 문장을 많이 보면서 논리적인 판단을 하는 연습이 필요할 것입니다. | 수의 체계: 수의 체계 본격적으로 수에 대해서 이야기해보겠습니다. 수는 크게 실수와 허수로 구분됩니다. 실수는 실제 존재하는 수를 이야기하고 허수는 개념상으로 존재하는 수입니다. 개념상으로 존재하다는 의미가 쉽게 이해하지 못할 수 있습니다. 조금 더 쉽게 이야기한다면 실수는 보이는 수이고 허수는 보이지 않는 수를 이야기한다고 볼 수 있습니다. 보이지 않는다는 이야기는 주어지는 조건에서는 성립하지 못하지만 조건이 바뀌면 만족할 수 있다는 의미를 내포하고 있습니다. 중고등학교 수학에서 허수가 큰 의미를 갖지 못하지만 심도 있는 수학적 내용을 들어갈 때는 허수라는 개념은 아주 중요한 의미를 갖습니다. 실수는 다시 유리수와 무리수로 구분이 됩니다. 유리수와 무리수를 쉽게 이야기하면 어떠한 수를 소수(小數)로 표현했을 때 소수점 밑의 수가 유한 개 일 것이냐 무한 개 일 것이냐는 차이입니다. 다시 무리수는 소수점 밑의 수가 일정한 규칙을 가질 것이냐 불규칙할 것이냐에 따라 나뉠 수 있습니다. 소수점 밑의 수가 일정한 규칙을 가질 경우 이를 순환소수라고 하고 이는 유리화가 가능해집니다. 유리수는 정수와 정수가 아닌 수로 나누어지고 정수가 아닌 수는 흔히 소수(小數)로 나타낼 수 있습니다. 정수는 양의 정수와 $0$, 음의 정수로 나누어집니다. 양의 정수를 다른 말로 자연수라고 이야기하고 가장 많이 사용하는 $1$, $2$, $3$, $4$, $5$ 등의 형태로 사용됩니다. 음의 정수는 $-1$, $-2$, $-3$ 등의 형태로 사용됩니다. 조금 깊게 생각해 봐야 할 부분이 자연수입니다. 자연수는 소수(素數), $1$, 합성수로 이루어집니다. 여기서 소수(素數)는 수학적으로 아주 중요한 의미를 갖습니다. 왜냐하면 우리가 사용하는 모든 수는 소수(素數)의 곱으로 이루어져 있습니다. $4=2 \times 2$, $6=2 \times 3$, 등등 모든 합성수는 소수(素數)의 곱으로 이루어져 있습니다. 소수(素數)의 정의를 살펴보면 $1$과 자기 자신만의 약수를 갖는 수를 소수(素數)라고 합니다. 소수(素數)가 가지고 있는 핵심적인 의미 중에 하나는 자연수의 가장 작은 단위입니다. 실제로 정수론에 관련한 여러 가지 증명이나 가설들이 소수(素數)에 의해서 나왔습니다. 이러한 수의 체계는 실제로 수학을 하는 데 있어서 직접적인 영향을 미치지는 않습니다. 아마 대부분 직관적으로 판단을 하거나 특별히 인지하지 않고 수학을 보는 경향이 많이 있습니다. | 조건의 중요성: 수학이라는 학문은 조건이 아주 중요한 부분을 차지하고 있습니다. 아마도 많은 사람은 수학 문제를 풀 때 ‘다음 정수 $x$, $y$에 대해서’, ‘ 실수 $a$, $b$에 대해서’등등 문제의 가장 처음에 나오는 문장이나 ‘단, $a$, $b$는 자연수’, ‘$i$는 허수’, ‘$x$, $y$는 $0$이 아님’등등 이러한 문제 마지막에 나오는 것들을 인지하면서 문제를 풀어본 적인 거의 없을 것이라 생각합니다. 실제로 문제를 해결하는 데 있어서 이 부분들이 직접적인 영향을 미치는 경우는 거의 없습니다. 그래서 많은 사람들이 이 부분을 인지하면서 문제를 해결하지 않습니다. 하지만 이 부분은 아주 중요한 부분입니다. 이 부분들이 조건이고 이러한 조건이 없다면 문제는 조건의 범위가 제약이 없기 때문에 전혀 다른 결과가 나올 수 있는 가능성이 생길 수 있습니다. 예를 들어서 다음과 같은 문제가 있다고 가정해보겠습니다.  94년도 수능문제 이 문제에서 $m$의 조건을 보면 $10$보다 작은 자연수라는 조건을 덧붙였습니다. 그 이유는 $m$의 조건이 없으면 답이 여러 개가 나오게 됩니다. 가장 간단하게 생각해볼 수 있는 것은 $m$의 값이 $50$이 되면 첫항이 $50$이고 항수는 $1$개인 수열을 생각할 수 있습니다. 그럼 답은 $51$이 됩니다. 그럼 보기의 답이 없습니다. 이외에도 여러 가지 경우가 나올 수 있습니다. 이처럼 수학에서 수를 정의하는 부분은 고려해야 하는 수의 범위를 정해주기 때문에 문제에서 고려해야 하는 부분을 정할 수 있습니다. "
    }, {
    "id": 9,
    "url": "http://localhost:4000/math-blog-3/",
    "title": "수학 = 공식 ??????",
    "body": "2020/08/18 - 수학을 흔히 계산의 도구로만 생각하는 경향들이 있습니다. 그래서 수학을 떠올리면 산수를 떠올리고 많은 사람들이 수학을 통해 무언가 계산을 해야 한다는 생각을 먼저 합니다. 수학이라는 학문의 본질은 계산이 아니라고 생각합니다. 수학은 언어이고 논리적인 표현을 하는 하나의 방식이라고 생각합니다. 그래서 수학을 표현의 관점에 보는 것은 아주 중요한 관점이라고 생각합니다. 표현을 한다는 이야기는 소통을 한다는 이야기이고 소통은 언어가 가지고 있는 중요한 기능입니다. 그래서 수학을 공부할 때는 공식이나 계산의 방법 위주로 공부하는 것도 있지만, 수학이라는 학문이 어떠한 방식으로 표현하고 표현의 요소들이 어떻게 함축적인 의미들을 갖는지 이해하는 공부를 한다면 수학의 본질을 이해하는 과정이 될 수 있을 것이라는 생각을 합니다. | 수학의 핵심은 일반화: 수학 공부를 할 때 접하는 공식이 수학 일반화의 산물입니다. 수학이라는 학문이 가지고 있는 핵심은 나열적인 표현을 통해 공통의 로직을 찾아내어 하나의 일반적인 형태로 만들어 수식화를 하는 것이라고 생각합니다. 간단한 좌표를 나열해보겠습니다. (1,1), (2,2), (3,3), (4,4), (5,5), (6,6), (7,7), (8,8), (9,9),・・・ 이러한 좌표가 있습니다. 이 부분의 공통적인 로직은 $x$좌표의 값과 $y$좌표의 값이 같다는 것입니다. 그래서 이 부분을 일반화하여 $y=x$라는 항등함수가 나오는 것입니다. 저번 글에서도 이야기를 했지만 수학은 나열화, 수식화, 시각화를 통해서 수학을 표현합니다. 그런데 많은 사람들은 나열화를 건너띄고 수식화만을 배우고 외워서 수학이 나타내고자 하는 본질을 보지 못하는 경우가 많이 있습니다. 그래서 수학적 공식이 이해가 가지 않을 경우 나열을 해보면 수식이 가지고 있는 특수성을 파악할 수 있을 것입니다. 그러한 예로 오일러 공식을 가지고 파악을 해보겠습니다. 수식이 복잡하지만 중요한 것은 세부적인 부분을 보는 것이 아니라 큰 틀에서 보는 것이 중요합니다. 오일러 공식은 다음과 같습니다. 이 공식을 전체로 보는 것이 아니라 나눠서 보겠습니다. $e^{ix}$, $\cos x$, $i\sin x$ 각각의 항을 테일러급수를 이용하면 다음과 같이 정리할 수 있습니다.  빨간 네모 안을 주목하면 지수함수와 삼각함수를 나열화한 것입니다.  빨간 네모 부분은 $\cos x$이고 파란 네모 부분은 $\sin x$입니다. 이렇게 판단할 수 있습니다. 오일러 공식을 통해서 알려드리고 싶은 부분은 공식의 형태가 나열화 되어 있는 부분의 집합들이라는 것을 알려드리고 싶은 것입니다. 결국, 공식은 여러 가지 수학적 과정의 일반화된 묶음의 연산 관계로 표현하는 것이라서 수학적인 이해를 할 때 공식의 세세한 부분을 보는 것이 아니라 일정한 블록의 형태를 보면 공식의 의미를 이해할 수 있게 될 수 있다고 생각합니다. | 수학도 상황에 따라 표현이 다르다: 언어는 다른 단어들이 상황에 따라 같은 의미로 쓰이는 경우가 많이 있습니다. 예를 들어 식사, 수라, 진지, 밥 등 같은 의미의 단어들이 상황에 따라서 쓰임이 다릅니다. 수학 또한 같은 표현이라도 조건이 달라지거나 상황이 바뀌면 사용되는 의미가 달라지거나 다른 표현이라도 같은 의미를 갖는 수학적 공식이 있습니다. 이러한 수학의 표현을 잘 이해하기 위해서는 수식의 세세한 부분을 이해하려고 하면 막히는 부분이 생길 수 있습니다. 그래서 수식을 형태 형태 별로 해석하는 것이 중요합니다. 간단한 수식은 이런 형태들이 파악되기 쉽게 표현되어 있는 반면, 복잡한 수식은 수식이 정리되어 있거나 다른 형태에 포함되어 있어서 파악하기가 쉽지 않을 수도 있습니다. 그러나 수학적인 형태가 익숙해지면 수식에 빠진 부분이 있어도 해석을 할 수 있습니다. 하나의 예를 들어 보겠습니다. 가장 잘 알만한 피타고라스 정리는 입니다. 이 피타고라스의 정리는 도형에서 직각삼각형일 때 관계가 성립하는 공식입니다. 그리고 각각의 문자는 밑변, 높이, 빗변의 관계입니다. 그리고 원의 방정식을 보면 입니다. 이 원의 방정식은 좌표상의 $x$, $y$와 반지름의 $r$ 관계가 성립하는 공식이고 말로 표현하면 원의 중심으로 같은 거리에 있는 점들의 집합입니다. 이렇게 두 공식은 같은 구조를 가지고 있는 같은 공식입니다. 하지만 주어지는 상황이 달라서 이름이 다르게 쓰이는 것입니다. 수학에는 이런한 상황이 많이 적용되는 편입니다. 수학을 공부할 때 이런 관계를 파악할 수 있다면 조금 재미있게 수학을 공부할 수 있다고 생각합니다. "
    }, {
    "id": 10,
    "url": "http://localhost:4000/math-blog-2/",
    "title": "수학 = 공식 ??????",
    "body": "2020/08/14 - 수학이라는 말을 들었을 때 가장 먼저 생각이 나는 것은 공식을 외운다는 생각이 제일 먼저 날것입니다. 주변 사람들에게 수학에 대한 이야기를 하면 제일 많이 듣는 소리가 ‘근의 공식도 기억에 없는데. . ’입니다. 수많은 사람들이 수학하면 제일 먼저 생각하는 것이 근의 공식입니다. 그리고 근의 공식을 기억하고 있으면 수학을 조금은 할 줄 아는 사람이라 인식합니다. 저의 개인적인 생각은 수학공식을 많이 아는 정도가 수학을 잘하는 것과는 상관이 없다고 생각합니다. 수학공식을 많이 알고 있다면 수학을 좀 더 자신 있게 접근할 수 있다는 장점 정도는 있을 것이라고 생각합니다. 중고등학교 때 많은 학생들은 수학공식을 외웁니다. 그래야 문제를 푼다고 생각을 합니다. 수학 공식을 외운다는 것을 부정할 생각은 없습니다. 당연히 공식을 외우고 있어야 문제를 풀 수 있기 때문이고 문제를 빠르게 해결할 수 있습니다. 그리고 공식이라는 것은 여러 가지 수학적인 불편함을 하나의 수식으로 편리하게 사용할 수 있게 정리한 것이기 때문에 당연하게 알아야 합니다. 그런데 저는 문제를 풀기 위해서 공식을 외우는 것은 금방 잊어버리고 수학공식이 가지고 있는 여러 가지 심오한 의미를 알지 못하게 됩니다. 그래서 공식이 가지고 있는 의미와 해석에 대해서 이야기하려고 합니다. | 수학공식은 간단한 공식을 이해할 수 있으면 복잡한 수학의 공식을 이해할 수 있다. : 가장 기본적인 공식을 이해하고 있으면 복잡한 형태의 공식을 쉽게 이해할 수 있고 공식을 블록단위로 해석을 하게 되어 외우기도 편하고 접근이 쉬워질 수 있습니다. 하나의 예를 들어 보겠습니다. 대부분 많이 알고 있는 삼각형의 넓이를 보겠습니다. 삼각형의 넓이는 $\Large {1 \over 2} \small{\times 밑변 \times 높이 }$입니다. 중학교 때 거의 입에 붙어 있을 정도로 왜웠을겁니다. 그래서 삼각형의 넓이 하면 바로 기억이 가물가물 할 수 있어도 “2분의 1 곱하기 밑변 곱하기 높이”이라는 문장은 입이 기억하고 있어서 이 글을 읽는 분들 중에 깜짝올라신 분도 있을 거라 생각이 듭니다. 이런 식으로 무작정 외우기만 하면 활용적인 측면은 약해질 거라 생각이 듭니다. 그래서 삼각형의 넓이를 해석해 보겠습니다. 실생활에서 $m^2$을 많이 보았을 겁니다. $m^3$은 넓이를 나타내는 단위입니다. $m^2=m \times m$입니다. 이 이야기는 길이 값과 길이 값을 곱한 것입니다. 그래서 길이라는 것은 여러 가지의 의미를 대표하는 표현입니다. 길이라는 의미 안에는 선분, 높이, 거리, 밑변, 윗변 등등 있을 수 있을 것입니다. 즉, 길이를 곱했다는 것은 넓이를 의미하고 이런 식의 식의 연산은 모두 넓이의 의미로 해석을 할 수 있습니다. $\pi ^2$, $e^2$, $2^2$, $15^2$, $\cdots$등의 수학적인 표현을 넓이로도 해석할 수 있습니다. 차후에 따로 수학의 언어적 표현에 대해서 이야기를 따로 하겠지만, 수학의 표현은 어떤 시각으로 해석하느냐에 따라 의미를 다르게 해석할 수 있고 수학적 논리만 맞다면 정해진 풀이가 아닌 다른 시각으로 문제를 해결할 수도 있습니다. 다시 삼각형의 넓이 공식을 다시 이야기하자면 넓이 공식은 간단히 정리하자면 길이의 제곱입니다. 그럼 다른 수학적인 표현에서 제곱으로 표현되어 있는 것들은 넓이로 해석을 할 수도 있습니다. 삼각형의 넓이 공식의 조금 복잡한 형태를 보면 $\Large {1 \over 2} \normalsize{\times a \times b \times \sin \theta} $이런 식의 형태가 있습니다. 문과 출신이라면 처음 보는 공식일 수도 있습니다. 이 공식을 처음 봐도 상관이 없습니다. 설명하고 하는 목적은 ‘이 공식을 어떻게 기본 공식에 적용할 것인가’ 가 목적입니다. 여기서 중요한 것은 위 공식 또한 삼각형의 넓이라는 것입니다. 삼각형의 넓이를 알려면 밑변과 높이를 알아야 합니다. 아무리 복잡한 삼각형의 넓이 공식이라도 밑변에 해당하는 부분과 높이에 해당하는 부분이 존재한다는 것입니다. 그럼 공식에서 밑변에 해당하는 부분과 높이에 해당하는 부분을 나눠보면 위의 그림에서 볼 수 있듯이 $b$는 밑변이라 것은 한눈에 알 수 있습니다. 그럼 높이는 어떻게 될 수 있을까요? 그것은 삼각비를 이용하는 것입니다 그래서 $\sin$을 이용한 것입니다. 그럼 $\sin$에 빗변을 곱하면 높이만 남게 됩니다. 그래서 $a \cdot \sin \theta$가 높이에 해당합니다. 이런 식으로 하면 여러 가지 공식을 만들어 낼 수도 있습니다. 수학의 공식들은 요소요소들의 연산으로 이루어져 있습니다. 그래서 그 요소들을 어떤 식으로 표현했는지를 알게 되면 수학 공식을 이미지로 기억하는 것이 아니라 의미로 기억할 수 있습니다. "
    }, {
    "id": 11,
    "url": "http://localhost:4000/math-blog-1/",
    "title": "우리는 수학을 왜 배워야 하는가?",
    "body": "2020/08/13 - 수학은 논리성의 학문입니다. 앞뒤의 인과관계를 판단하여 그 다음을 예측하거나 이전을 예측할 수 있는 학문이 수학입니다. 수학적인 능력 다시 말해서 수리적인 능력은 생각하고 판단하는데 아주 중요한 역할을 합니다. 수학은 크게 네가지의 능력을 필요로 합니다. 계산능력, 추론능력, 이해능력, 문제해결능력입니다. 이것은 우리가 고등학교때 수능에서 수학영역의 평가를 하는 요소기도 합니다. 그러나 수학이 이런 능력이 필요로 한다는 것을 들어 본적이 있는 사람은 별로 없을 것입니다. 왜냐하면 기존에 수학을 학습하는 방식은 공식을 외우고 그 공식을 이용하여 문제를 반복적으로 풀어보는 학습방식을 되풀이 하고 정해진 시간안에 문제를 빠르게 풀어야하며 답이 맞느냐 틀리느냐가 중요한 학문이라고 생각하기 때문입니다.  수학은 논리적으로 생각할 수 있게 만든다. : 수학의 증명은 크게 연역법, 귀류법, 귀납법이 있습니다. 여기서 증명밥법에 대해서 이야기 할려고 하는 것은 아닙니다. 증명방법의 구조를 봤을 때 귀류인지 연역인지 귀납인지가 결정되는 것이고 실제로 모든 증명의 세부단계는 연역법으로 이루어져 논리적인 인과관계를 판단하게 되어 있습니다. 예로 많이 쓰는 방정식의 정리 아마 대부분 이런식을 수식을 정리할 때 쓰는 방법이 연역인 논리 전계라는 생각을 가지고 식을 정리해 본적은 없을 것입니다. 연역적인 논리구조는 여러가지를 추론할 수 있습니다. 위의 식에서 _______ 이렇게 중간이 비워져 있다고 해도 비워져 있는 식이 무엇인지를 쉽게 할 수 있을것입니다. 그것은 식의 정리를 통해서 안다는 것도 의미하겠지만 연역적인 논리적 전계를 통해서 안다는 것도 의미합니다. 수학의 논리라는 것은 연역적인 성격이 전부라고 할 수 있습니다. 수학은 이해능력이 중요하다. : 수학에서 제일 중요한 능력은 이해능력이라고 생각합니다. 그 이유는 문제의 상황을 인식해야 문제를 해결할 수 있지 때문입니다. 많은 사람들이 중고등학교때나 혹은 대학교때 수학문제를 풀때 무작정 공식만 외워서 문제를 풀었던 기억이 있을 것입니다. 그런데 문제의 상황이 바뀌면 공식을 적용하지 못하는 경우를 많이 겪었을 것이라고 생각합니다. 그 이유는 공식을 이해하지 못했기때문입니다. 공식은 외워야하는 대상이 아니라 이해해야하는 대상입니다. 공식 또한 언어의 표현이기때문에 이해를 해야 사용을 할 수 있습니다. 예를 들어 우리가 영어단어를 무작정 외우면 적절하게 영어 단어를 사용하지 못하는 경우가 생길 수 있습니다. 그 이유는 영어단어도 상황에 따라서 써야할 때가 있고 쓰지말아야 할 때가 있는 것처럼 영어단어를 잘 이해해야 적절하게 사용할 수 있을 것입니다. 수학이라는 학문은 표현하는 학문입니다. 우리가 복잡하고 표현하기 아주 긴 것들을 단순하고 명확하게 사용할 수 있도록 만들어진 학문이 수학입니다. 수학의 함축적 의미에는 여러가지를 담고 있습니다. 수학 안에는 논리도 포함하고 있고 상황도 포함하며 철학도 담겨있습니다.  옛날의 수학자들은 단순하게 수학만 하는 사람이 아니라 과학도 하고 철학도 하고 음악이며 미술도 하였습니다. 대표적으로 다빈치를 들 수 있을 것입니다. 다빈치는 수학이며 과학이며 철학 음악 미술도 하였습니다. 그리고 근대의 미술가 중에 피카소는 진로를 결정할 때 미술을 할 것인지 수학을 할 것인지 고민하였다고 합니다. 피카소의 미술은 이상한 형태의 그림을 그렸습니다. 그 이유는 피카소가 3차원을 2차원에 표하였기때문입니다. 그전까지의 그림은 3차원의 그림을 보여지는 2차원의 그림으로 그린 반면 피카소는 3차원 자체를 2차원에 표현하였고 그렇기 때문에 피카소의 그림이 이상하게 그린것입니다. 공간을 2차원에 표현한다는 수학적인 생각이 피카소라는 거장을 만들 수 있었던 것이라고 생각합니다. 이처럼 수학은 여러가지 학문에 의해 표현되어지고 만들어지고 해석되어 왔습니다.  그래서 수학을 단순하게 계산을 하고 공식을 외우고 적용하고 문제를 푸는 도구로만 사용하는 것이 아니라 수학이 만들어지는 표현의 형태와 의미를 어떤 방식으로 해석하고 이해하고 적용할 것인지에 대해서 생각할 필요가 있다고 생각합니다. 수학에 필요한 네가지 능력. : 수학에는 계산능력, 추론능력, 이해능력, 문제해결능력 이렇게 네가지의 능력이 필요합니다. 계산능력은 말 그대로 계산하는 능력입니다. 공식을 이용하여 수학적인 계산을 할 수 있는지에 대한 능력을 요구하는 것입니다. 추론능력은 크게 발견적 추론과 연역적 추론으로 나누어 집니다. 발견적 추론을 쉽게 이야기하면 어떤 수의 나열에 대해서 앞뒤의 관계성을 따져서 앞으로 어떤 수가 나올지에 대한 추론을 하는 것입니다. 이런 수학적 사고는 초등학교때부터 배웁니다. 간단한 예로 $1,2,3,4,$_$,6,7,8$ 이렇게 나열되어 있는 형태에서 중간의 _에 무슨 수가 들어갈 건지에 대해서 초등학교 고학년이 되면 배우는 수학적인 내용입니다. 이것을 나중에 고등학교에서 수열이라는 단원으로 다시 배우게 됩니다. 즉, 수열은 수들의 나열이고 이런 수들의 나열을 규칙과 나열의 형태를 통해서 수식화하는 것입니다. 여기서 생각해봐야 할 것은 나열의 형태를 외우고 수식을 외워서 나열의 형태에 맞는 수식을 이용하여 문제를 푸는 것이 아니라 수들의 나열이 어떤한 형태로 나열되어지고 나열되어지는 형태는 어떠한 수학적인 규칙이 존재하고 나열되는 수들이 앞으로 어떠한 값이 나올 것인지에 대해서 이해하는 것이 발결적 추론입니다. 연역적 추론은 이름에도 있듯이 연역적인 추론을 하는 것입니다. 앞에서 이야기한 발견적 추론과 논리는 같지만 형태가 다르고 익숙하지 않은 추론이기 때문에 어려울 수도 있습니다. 연역적 추론의 예는 증명의 이해과정을 예를 들 수 있습니다. 우리가 어떤한 수식을 증명한다면 그 수식은 여러가지 수식적 나열들로 이루어져 있을 것입니다. 이런 수식적 나열들이 연역적인 방법으로 되어 있기때문에 우리가 이해를 할 수가 있는 것입니다. 이해능력은 수학공식이나 수학적 그래프, 수학적인 표현들에 대해서 이해하고 활용하는 능력을 말합니다. 단순하게 공식을 외우는 방식 말고 공식에서 쓰여지는 수식이 어떤한 의미를 가지고 있고 그런 의미들을 어떤식으로 확장할 수 있는지 이해하는 방식을 통해 수학적인 해석이 가능해지는 것입니다. 수학적 이해능력을 키울려면 수학적인 논리(연역적 논리)가 중요합니다. 그래서 수학적 설명이 많이 쓰여지는 글을 많이 읽으면 수학적인 이해능력이 키워지게 됩니다. 마지막으로 문제해결능력은 앞에서 이야기한 이해능력과 연결되는 능력이라고 할 수도 있을 것입니다. 수학적인 이해능력을 상황상황에 맞게 적용할 수 있는 능력을 말합니다. 예를 들면 우주에 떠있는 인공위성 두 대가 다른 속도로 돌고 있을 때 같은방향으로 돌 때와 다른 방향으로 돌 때 얼마의 시간마다 마주치는지 알고 싶을 때 여러가지 방식으로 문제를 해결해 볼 수 있을 것입니다. 중학교때 배웠던 방정식을 이용하여 수식으로 정리하여 문제를 풀 수도 있고 그래프를 그려서 중첩되는 주기를 찾을 수 있을 것이며 컴퓨터 그래픽을 이용하여 시뮬레이션 해서 알아 낼 수 도 있을 것입니다. 여기서 중요한 것은 문제를 해결하는 것이 중요한 것이지 정해진 방식으로 계산하는 것이 아닙니다. "
    }];

var idx = lunr(function () {
    this.ref('id')
    this.field('title')
    this.field('body')

    documents.forEach(function (doc) {
        this.add(doc)
    }, this)
});
function lunr_search(term) {
    document.getElementById('lunrsearchresults').innerHTML = '<ul></ul>';
    if(term) {
        document.getElementById('lunrsearchresults').innerHTML = "<p>Search results for '" + term + "'</p>" + document.getElementById('lunrsearchresults').innerHTML;
        //put results on the screen.
        var results = idx.search(term);
        if(results.length>0){
            //console.log(idx.search(term));
            //if results
            for (var i = 0; i < results.length; i++) {
                // more statements
                var ref = results[i]['ref'];
                var url = documents[ref]['url'];
                var title = documents[ref]['title'];
                var body = documents[ref]['body'].substring(0,160)+'...';
                document.querySelectorAll('#lunrsearchresults ul')[0].innerHTML = document.querySelectorAll('#lunrsearchresults ul')[0].innerHTML + "<li class='lunrsearchresult'><a href='" + url + "'><span class='title'>" + title + "</span><br /><span class='body'>"+ body +"</span><br /><span class='url'>"+ url +"</span></a></li>";
            }
        } else {
            document.querySelectorAll('#lunrsearchresults ul')[0].innerHTML = "<li class='lunrsearchresult'>No results found...</li>";
        }
    }
    return false;
}

function lunr_search(term) {
    $('#lunrsearchresults').show( 400 );
    $( "body" ).addClass( "modal-open" );
    
    document.getElementById('lunrsearchresults').innerHTML = '<div id="resultsmodal" class="modal fade show d-block"  tabindex="-1" role="dialog" aria-labelledby="resultsmodal"> <div class="modal-dialog shadow-lg" role="document"> <div class="modal-content"> <div class="modal-header" id="modtit"> <button type="button" class="close" id="btnx" data-dismiss="modal" aria-label="Close"> &times; </button> </div> <div class="modal-body"> <ul class="mb-0"> </ul>    </div> <div class="modal-footer"><button id="btnx" type="button" class="btn btn-danger btn-sm" data-dismiss="modal">Close</button></div></div> </div></div>';
    if(term) {
        document.getElementById('modtit').innerHTML = "<h5 class='modal-title'>Search results for '" + term + "'</h5>" + document.getElementById('modtit').innerHTML;
        //put results on the screen.
        var results = idx.search(term);
        if(results.length>0){
            //console.log(idx.search(term));
            //if results
            for (var i = 0; i < results.length; i++) {
                // more statements
                var ref = results[i]['ref'];
                var url = documents[ref]['url'];
                var title = documents[ref]['title'];
                var body = documents[ref]['body'].substring(0,160)+'...';
                document.querySelectorAll('#lunrsearchresults ul')[0].innerHTML = document.querySelectorAll('#lunrsearchresults ul')[0].innerHTML + "<li class='lunrsearchresult'><a href='" + url + "'><span class='title'>" + title + "</span><br /><small><span class='body'>"+ body +"</span><br /><span class='url'>"+ url +"</span></small></a></li>";
            }
        } else {
            document.querySelectorAll('#lunrsearchresults ul')[0].innerHTML = "<li class='lunrsearchresult'>Sorry, no results found. Close & try a different search!</li>";
        }
    }
    return false;
}
    
$(function() {
    $("#lunrsearchresults").on('click', '#btnx', function () {
        $('#lunrsearchresults').hide( 5 );
        $( "body" ).removeClass( "modal-open" );
    });
});